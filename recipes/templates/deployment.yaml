apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "recipes.fullname" . }}
  labels:
    {{- include "recipes.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "recipes.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "recipes.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "recipes.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            - name: DB_ENGINE
              value: {{ (.Values.db | default dict).engine | default "django.db.backends.postgresql" | quote }}
            - name: DISABLE_EXTERNAL_CONNECTORS
              value: {{ .Values.disable_external_connectors | default "0" | quote }}
            - name: EXTERNAL_CONNECTORS_QUEUE_SIZE
              value: {{ .Values.external_connectors_queue_size | default "100" | quote }}
            - name: POSTGRES_DB
              value: {{ (.Values.db | default dict).name | default "djangodb" | quote }}
            - name: POSTGRES_HOST
              # IMPORTANT: For sidecar containers, use localhost to connect to the other container in the same pod
              value: "127.0.0.1"
            - name: POSTGRES_PORT
              value: {{ (.Values.db | default dict).port | default "5432" | quote }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: recipes-login
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: recipes-login
                  key: password
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: recipes-login
                  key: secret-key
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image:
            repository: {{ .Values.image.repository | default "vabene1111/recipes" | quote }}
            tag: {{ .Values.image.tag | default (.Chart.AppVersion | default "latest" | quote) }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port | default 8080 }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /opt/recipes/staticfiles
              name: recipes-staticfiles-claim
            - mountPath: /opt/recipes/mediafiles
              name: recipes-mediafiles-claim
        - name: {{ .Chart.Name }}-db
          env:
            - name: DB_ENGINE
              value: {{ (.Values.db | default dict).engine | default "django.db.backends.postgresql" | quote }}
            - name: POSTGRES_DB
              value: {{ (.Values.db | default dict).name | default "djangodb" | quote }}
            - name: POSTGRES_HOST
              value: "127.0.0.1"
            - name: POSTGRES_PORT
              value: {{ (.Values.db | default dict).port | default "5432" | quote }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: recipes-login
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: recipes-login
                  key: password
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image:
            repository: "postgres"
            tag: {{ (.Values.db | default dict).tag | default "16-alpine" | quote }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port | default 8080 }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: recipes-db-claim
      volumes:
        - name: recipes-db-claim
          persistentVolumeClaim:
            claimName: recipes-db-claim
        - name: recipes-mediafiles-claim
          persistentVolumeClaim:
            claimName: recipes-mediafiles-claim
        - name: recipes-staticfiles-claim
          persistentVolumeClaim:
            claimName: recipes-staticfiles-claim
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
